Exo 5:

1) gcc -g hello.c -o hello

2) valgrind ./hello
==5057== Memcheck, a memory error detector
==5057== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==5057== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==5057== Command: ./hello
==5057== 
Hello You !
==5057== 
==5057== HEAP SUMMARY:
==5057==     in use at exit: 0 bytes in 0 blocks
==5057==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==5057== 
==5057== All heap blocks were freed -- no leaks are possible
==5057== 
==5057== For counts of detected and suppressed errors, rerun with: -v
==5057== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 1 from 1)
3408300@pc4064:~/Info/OPI/TP5/git/tp5-paolaallegrini/debug$ ^C

Valgrind n'a détecté aucune erreur de mémoire pour le programme hello.

3)
en sortie: aucune mémoire utilisée
pendant le programme: 0 allocations mémoire, 0 libérations de mémoire, 0 bytes alloués
tous les tas de mémoire ont été libérés, pas fuite de mémoire possible
si on veut le nombre d'erreur détectées Valgrind -v ./hello
Sommaire : 0 erreurs

4) et 5)
L'erreur se trouve à la ligne 6 du programme
Valgrind nous informe que l'adresse du pointeur n'est pas "rangée", allouée ou récemment libérée; le pointeur p n'a pas été initialisé.

Si on pense qu'il s'agit d'un manque de place dans la mémoire, on peut toujours agrandir la mémoire.

6) le pointeur p n'a pas été initialisé et la variable sum n'a pas été utilisée.

7) 
erreurs:
p a été libéré avant de calculer la somme (l19)

8) toutes les allocations n'ont pas été libérées : 13 alloc et 12 free (pour le nombre 12), un block de mémoire de 96 bytes a été perdu.

9) pas de ligne spécifiée.Les p[i] ont été libérés mais pas p.
10)
Nous avons choisi d'exécuter mem3 sous emacs:
M-x shell
M-x compilation-shell-minor-mode
valgrind ./mem3



